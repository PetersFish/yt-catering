<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.yutang.backend.dao.FoodOrdersCustomMapper">
  <resultMap id="BaseResultMap" type="cn.yutang.backend.pojo.po.FoodOrders">
    <id column="or_id" jdbcType="VARCHAR" property="orId" />
    <result column="tb_id" jdbcType="INTEGER" property="tbId" />
    <result column="or_beginTime" jdbcType="DATE" property="orBegintime" />
    <result column="or_endTime" jdbcType="DATE" property="orEndtime" />
    <result column="or_status" jdbcType="INTEGER" property="orStatus" />
    <result column="shop_id" jdbcType="INTEGER" property="shopId" />
    <result column="or_totalPrice" jdbcType="DOUBLE" property="orTotalprice" />
  </resultMap>

  <sql id="Base_Column_List" >
    o.or_id,o.tb_id,o.or_beginTime,o.or_endTime,o.or_status,o.shop_id,o.or_totalPrice
  </sql>

  <sql id="Where_Clause">
    <where>
      o.shop_id=#{orderCondition.shopId}
      <if test="orderCondition != null and orderCondition.orBegintime != null and orderCondition.orBegintime != ''">
        <bind name="Begintime" value='@java.text.SimpleDateFormat@new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(orderCondition.orBegintime)'/>
        and o.or_endTime >= #{Begintime}
      </if>
      <if test="orderCondition != null and orderCondition.orEndtime != null and orderCondition.orEndtime != ''">
        <bind name="Endtime" value='@java.text.SimpleDateFormat@new SimpleDateFormat("yyyy-MM-dd HH:mm:ss").format(orderCondition.orEndtime)'/>
        and o.or_endTime <![CDATA[ <= ]]> #{Endtime}
      </if>
      <if test="orderCondition != null and orderCondition.tbId != null and orderCondition.tbId != 0">
        and  o.tb_id like '%${orderCondition.tbId}%'
      </if>
      <if test="orderCondition != null and orderCondition.orId != null and orderCondition.orId != ''">
        and  o.or_id like '%${orderCondition.orId}%'
      </if>
    </where>
  </sql>



  <select id="findOrders"  resultMap="BaseResultMap">
  select
  <include refid="Base_Column_List" />
  from foodorders o
  <include refid="Where_Clause"/>
  limit #{page.offset},#{page.limit}
</select>

  <select id="findCount" resultType="long">
    select
    count(*)
    from foodorders o
  </select>




</mapper>